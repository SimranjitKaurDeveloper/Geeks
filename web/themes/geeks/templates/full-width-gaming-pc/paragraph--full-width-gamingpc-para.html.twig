{#
/**
 * @file
 * Default theme implementation to display a paragraph.
 *
 * Available variables:
 * - paragraph: Full paragraph entity.
 *   Only method names starting with "get", "has", or "is" and a few common
 *   methods such as "id", "label", and "bundle" are available. For example:
 *   - paragraph.getCreatedTime() will return the paragraph creation timestamp.
 *   - paragraph.id(): The paragraph ID.
 *   - paragraph.bundle(): The type of the paragraph, for example, "image" or "text".
 *   - paragraph.getOwnerId(): The user ID of the paragraph author.
 *   See Drupal\paragraphs\Entity\Paragraph for a full list of public properties
 *   and methods for the paragraph object.
 * - content: All paragraph items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - paragraphs: The current template type (also known as a "theming hook").
 *   - paragraphs--type-[type]: The current paragraphs type. For example, if the paragraph is an
 *     "Image" it would result in "paragraphs--type--image". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - paragraphs--view-mode--[view_mode]: The View Mode of the paragraph; for example, a
 *     preview would result in: "paragraphs--view-mode--preview", and
 *     default: "paragraphs--view-mode--default".
 * - view_mode: View mode; for example, "preview" or "full".
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @see template_preprocess_paragraph()
 *
 * @ingroup themeable
 */
#}
{%
  set classes = [
    'paragraph',
    'paragraph--type--' ~ paragraph.bundle|clean_class,
    view_mode ? 'paragraph--view-mode--' ~ view_mode|clean_class,
    not paragraph.isPublished() ? 'paragraph--unpublished'
  ]
%}
{% block paragraph %}
  <div{{ attributes.addClass(classes) }}>
    {% block content %}

{% set features = paragraph.field_fwgp_desc1.value|raw %}
{% set features_array = features|split(',') %}

    <div class="gaming-pc-banner py-lg-5 py-md-4" style="background-image:url({{ file_url(paragraph.field_fwgp_bk_image.entity.uri.value) }});">
    	<div class="container">
    		<h2 class="text-center text-white gaming-pc-title">{{ paragraph.field_fwgp_title.value }}</h2>
    		<div class="row align-items-center">
    			<div class="col-lg-4 col-md-5 col-sm-6 one">
    				<div class="gaming-pc-config d-lg-block d-md-block d-sm-block d-none">

                <ul class="feature-list text-white mt-3">
                {% for feature in features_array %}
                        <li>{{ feature }}</li>
                {% endfor %}
                </ul>

        				<div class="small-device-gaming-pc-price text-white d-lg-none d-md-none d-block">
        						<h4>{{ paragraph.field_fwgp_price.value }}</h4>
                </div>

    				</div>
    				<div class="small-device-pc-config text-white d-lg-none d-md-none d-sm-none d-block">
    					<p>{{ paragraph.field_fwgp_desc1.value|raw }}</p>
              <small class="font-weight-bold text-white d-lg-none d-md-none d-sm-none d-block">
              {{ paragraph.field_fwgp_note1.value|raw }}</small>
            </div>
    			</div>
    			<div class="col-lg-5 col-md-4 col-sm-6 two">
    				<div class="gaming-pc-img pt-4 text-center">
            <img class="img-fluid" src="{{ file_url(paragraph.field_fwgp_image.entity.uri.value) }}">
            </div>
    			</div>
    			<div class="col-md-3">
    				<div class="gaming-pc-price mb-n4">
    					<h3>{{ paragraph.field_fwgp_price.value }}</h3>
            </div>
    			</div>
    		</div>
        <small class="font-weight-bold text-white d-lg-block d-md-block d-sm-block d-none">
        {{ paragraph.field_fwgp_note1.value|raw }}
        </small>
      </div>
    </div>

    {% endblock %}
  </div>
{% endblock paragraph %}
